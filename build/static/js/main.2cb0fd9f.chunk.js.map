{"version":3,"sources":["storage/app.selectors.ts","screens/loading.screen.tsx","storage/register.reducer.ts","screens/register/register.form.tsx","screens/register/register.screen.tsx","storage/signin.reducer.ts","screens/signin/signin.form.tsx","screens/signin/signIn.screen.tsx","screens/post/post.component.tsx","screens/post/post.column.tsx","screens/post/post.screen.tsx","app.navigator.tsx","storage/app.store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useAppSelector","useSelector","useAppDispatch","useDispatch","LoadingScreen","Container","component","maxWidth","style","position","left","top","transform","CircularProgress","size","RegisterSlice","createSlice","name","initialState","loading","reducers","startLoading","state","stopLoading","actions","Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","RegisterForm","classes","dispatch","CssBaseline","className","Avatar","noValidate","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","onClick","justify","Link","href","Box","mt","RegisterScreen","selector","register","SignInSlice","SignInForm","FormControlLabel","control","Checkbox","value","SignInScreen","signIn","Post","props","Card","CardHeader","title","username","subheader","CardContent","text","PostColumn","map","x","drawerWidth","createStyles","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","window","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","index","ListItem","button","ListItemText","primary","undefined","document","body","AppBar","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","AppNavigator","path","PostScreen","to","store","configureStore","reducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cb0fd9f.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, AppState } from \"./app.store\";\nimport { RegisterState } from \"./register.reducer\";\nimport { SignInState } from \"./signin.reducer\";\n\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport const useSignInSelector: TypedUseSelectorHook<SignInState> = (\n  selector\n) => useAppSelector((state) => selector(state.signIn));\n\nexport const useRegisterSelector: TypedUseSelectorHook<RegisterState> = (\n  selector\n) => useAppSelector((state) => selector(state.register));\n","import { Container } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React from \"react\";\n\nconst LoadingScreen = () => {\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div\n        style={{\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n        }}\n      >\n        <CircularProgress size={150} />\n      </div>\n    </Container>\n  );\n};\n\nexport default LoadingScreen;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const RegisterSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    loading: false,\n  },\n  reducers: {\n    startLoading: (state) => {\n      state.loading = true;\n    },\n    stopLoading: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { startLoading, stopLoading } = RegisterSlice.actions;\n\nexport type RegisterState = ReturnType<typeof RegisterSlice.reducer>;\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useAppDispatch } from \"../../storage/app.selectors\";\nimport { startLoading } from \"../../storage/register.reducer\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      Jibber-Jabber {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst RegisterForm = () => {\n  const classes = useStyles();\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar} />\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => dispatch(startLoading())}\n          >\n            Register\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { useRegisterSelector } from \"../../storage/app.selectors\";\nimport LoadingScreen from \"../loading.screen\";\nimport RegisterForm from \"./register.form\";\n\nconst RegisterScreen = () => {\n  const loading = useRegisterSelector((state) => state.loading);\n\n  return <div>{loading ? <LoadingScreen /> : <RegisterForm />}</div>;\n};\n\nexport default RegisterScreen;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const SignInSlice = createSlice({\n  name: \"signIn\",\n  initialState: {\n    loading: false,\n  },\n  reducers: {\n    startLoading: (state) => {\n      state.loading = true;\n    },\n    stopLoading: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { startLoading, stopLoading } = SignInSlice.actions;\n\nexport type SignInState = ReturnType<typeof SignInSlice.reducer>;\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useAppDispatch } from \"../../storage/app.selectors\";\nimport { startLoading } from \"../../storage/signin.reducer\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      Jibber-Jabber {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignInForm = () => {\n  const classes = useStyles();\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar} />\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => dispatch(startLoading())}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Register\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignInForm;\n","import React from \"react\";\nimport { useSignInSelector } from \"../../storage/app.selectors\";\nimport LoadingScreen from \"../loading.screen\";\nimport SignInForm from \"./signin.form\";\n\nconst trySignIn = (username: string, password: string) => {};\n\nconst SignInScreen = () => {\n  const loading = useSignInSelector((state) => state.loading);\n\n  return <div>{loading ? <LoadingScreen /> : <SignInForm />}</div>;\n};\n\nexport default SignInScreen;\n","import React from \"react\";\nimport {Card, CardContent, CardHeader, Typography} from \"@material-ui/core\";\n\nconst Post = (props) => {\n    return(\n        <div style={\n            {marginTop:25}\n        }>\n            <Card>\n                <CardHeader title={props.username} subheader={\"Date\"}/>\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.text}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default Post","import React from \"react\";\nimport Post from \"./post.component\";\n\n\nconst PostColumn = () => {\n    const array = [\n        {username:\"user 1\", text:\"text 1\"},\n        {username:\"user 2\", text:\"text 2\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 3\", text:\"text 3\"},\n        {username:\"user 4\", text:\"text 4\"}\n    ];\n    return (\n        <div>\n            {array.map(x => <Post username={x.username} text={x.text}/>)}\n        </div>\n    );\n}\n\nexport default PostColumn;\n\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport PostColumn from \"./post.column\";\n\nconst drawerWidth = 100;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n    }),\n);\n\ninterface Props {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window?: () => Window;\n}\n\nexport default function ResponsiveDrawer(props: Props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {['Posts', 'Settings', 'Logout'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Jibber-Jabber Posts\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <PostColumn/>\n            </main>\n        </div>\n    );\n}","import React from \"react\";\nimport { Switch } from \"react-router\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport RegisterScreen from \"./screens/register/register.screen\";\nimport SignInScreen from \"./screens/signin/signIn.screen\";\nimport PostColumn from \"./screens/post/post.column\";\nimport PostScreen from \"./screens/post/post.screen\"\n\nconst AppNavigator = () => {\n  return (\n    <Switch>\n      <Route path=\"/signin\" component={SignInScreen} />\n      <Route path=\"/register\" component={RegisterScreen} />\n        <Route path={\"/post\"} component={PostScreen}/>\n      <Route>\n        <Redirect to=\"/signin\" />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default AppNavigator;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { RegisterSlice } from \"./register.reducer\";\nimport { SignInSlice } from \"./signin.reducer\";\n\nconst store = configureStore({\n  reducer: {\n    signIn: SignInSlice.reducer,\n    register: RegisterSlice.reducer,\n  },\n});\n\nexport type AppState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppNavigator from \"./app.navigator\";\nimport store from \"./storage/app.store\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <BrowserRouter>\n          <AppNavigator />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}